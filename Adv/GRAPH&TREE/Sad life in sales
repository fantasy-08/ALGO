
// God & me
// Fly ...
//#pragma GCC optimize "trapv"//  WA to RE int!!
#include <bits/stdc++.h>
#define FOR(i,n) for(int i=0;i<n;i++)
#define FORR(i,n) for(int i=n;i>=0;i--)
#define pb push_back
#define vint vector<int>
#define sint set<int>
#define mint map<int,int>
#define pint pair< int,int >
#define int long long int 
#define test int tt1234; cin>>tt1234;while(tt1234--)
#define endl "\n"
#define input(a,n) int n;cin>>n;vint a(n);for(int&v:a)rd(v);
#define all(zz) zz.begin(),zz.end()
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define error(x) cerr << #x <<" is " << x << endl;
#define Error(a,b) cerr<<"( "<<#a<<" , "<<#b<<" ) = ( "<<(a)<<" , "<<(b)<<" )\n";
#define precision(x) cout<<fixed<<setprecision(x);
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
#define present(container, element) (container.find(element)!=container.end())
#define fint fast;test
#define set(a,x) memset(a,x,sizeof(a))
#define L(x)	((x)<<1)
#define R(x)	(((x)<<1)+1)
#define ft first
#define se second
#define MOD 1000000007
using namespace std;
template<typename... T> void rd(T&... args) { ((cin >> args), ...); }
template<typename... T> void pp(T... args) { ((cout << args << " "), ...); cout<<"\n"; }
const int N=1e5+1;
vector<vector<pint>>adj(N,vector<pint>());
int in[N],out[N],dp[N][20],lvl[N],dis[N];
int Time=1;

void dfs(int node,int par,int l,int weight)
{
	dp[node][0]=par;
	in[node]=Time++;
	lvl[node]=l;
	if(dis[node]==-1)
	dis[node]=weight;
	for(auto child:adj[node])
	{
		if(child.ft!=par)
		{
			dfs(child.ft,node,l+1,weight+child.se);
		}
	}
	
	out[node]=Time++;
}

void init(int n)
{
	for(int i=1;i<=n;i++)adj[i].clear(),lvl[i]=0,dis[i]=-1;
	Time=1;
	for(int i=0;i<=n;i++)
	{
		for(int j=0;j<20;j++)
		{
			dp[i][j]=-1;
		}
	}
}

void init_lca(int n)
{
	for(int j=1;j<20;j++)
	{
		{
		for(int i=0;i<=n;i++)
			if(dp[i][j-1]!=-1)
			{
				dp[i][j]=dp[dp[i][j-1]][j-1];
			}
		}
	}
}

int lca(int a,int b)
{
	if(lvl[a]>lvl[b])swap(a,b);
	int d=lvl[b]-lvl[a];
	int f=0;
	while(d)
	{
		if(d&1)b=dp[b][f];
		d>>=1;
		f++;
	}
	if(a==b) return a;
	
	for(int j=19;j>=0;j--)
	{
		if(dp[a][j]!=-1 && (dp[a][j]!=dp[b][j]))
			a=dp[a][j],b=dp[b][j];
	}
	
	return dp[a][0];
}

void solve(){
	int n,q,r;
	rd(n,q,r);
	init(n);
	FOR(i,n-1)
	{
		int u,v,w;
		rd(u,v,w);
		adj[u].pb({v,w});
		adj[v].pb({u,w});
	}
	dfs(r,-1,0,0);
	init_lca(n);
	
	while(q--)
	{
		int U,V;
		rd(U,V);
		// cerr<<dis[U]<<" "<<dis[V]<<" "<<dis[lca(U,V)]<<endl;
		int ans=dis[U]+dis[V]-2*dis[lca(U,V)];
		pp(ans);
	}
	
	return;	
}


int32_t main() {
    fint{
    	solve();
    }
    return 0;
}
