
// Problem : E. String Reversal
// Contest : Codeforces - Educational Codeforces Round 96 (Rated for Div. 2)
// URL : https://codeforces.com/contest/1430/problem/E
// Memory Limit : 256 MB
// Time Limit : 2000 ms
// Powered by CP Editor (https://github.com/cpeditor/cpeditor)

//#pragma GCC optimize "trapv"//  WA to RE int!!
#include <bits/stdc++.h>
#define FOR(i,n) for(int i=0;i<n;i++)
#define FORR(i,n) for(int i=n;i>=0;i--)
#define pb push_back
#define vlli vector<int>
#define slli set<int>
#define mlli map<int,int>
#define int long long int 
#define test int tt1234; cin>>tt1234;while(tt1234--)
#define endl "\n"
#define all(zz) zz.begin(),zz.end()
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define error(x) cerr << #x <<" is " << x << endl;
#define Error(a,b) cerr<<"( "<<#a<<" , "<<#b<<" ) = ( "<<(a)<<" , "<<(b)<<" )\n";
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
#define fint fast;test
#define SI(a,n) int a[n];FOR(i,n) cin>>a[i];
#define input(a,n) int n;cin>>n; SI(a,n)
#define set(a,x) memset(a,x,sizeof(a))
#define L(x)	((x)<<1)
#define R(x)	(((x)<<1)+1)
#define ft first
#define se second
#define MOD 1000000007
using namespace std;
int bit[200002];

void print(string s,string y,vector<int>&arr)
{
	for(auto v:s)cout<<v<<" ";
	cout<<endl;
	for(auto v:y)cout<<v<<" ";
	cout<<endl;
	for(auto v:arr)cout<<v<<" ";
	cout<<endl;
}

void update(int ind,int val,int n)
{
	while(ind<=n)
	{
		bit[ind]+=val;
		ind+= ((ind)&(-ind));		
	}	
}

int Sum(int ind)
{
	int ans=0;
	while(ind>0){
		ans+=bit[ind];
		ind-= ((ind)&(-ind));
	}
	return ans;
}

void solve(){
	int n;
	cin>>n;
	string s;
	cin>>s;
	string y(s);
	reverse(all(y));
	map<char,set<int>>M;
	for(int i=0;i<y.size();i++){
		M[y[i]].insert(i);
	}	
	vector<int>arr(n);
	for(int i=n-1;i>=0;i--){
		arr[i]=*prev(M[s[i]].end());
		arr[i]++;
		M[s[i]].erase(prev(M[s[i]].end()));
	}
	
	int ans=0;
	for(int i=n-1;i>=0;i--){
		int val=arr[i];
		ans+=Sum(val);
		update(arr[i],1,n);
	}	
	
	cout<<ans<<endl;
	return;	
}


int32_t main() {
    // fint{
    	fast;
    	solve();
    // }
    return 0;
}
