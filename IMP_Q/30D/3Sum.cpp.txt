class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        set<vector<int>>ans;
        vector<vector<int>>uni_Ans;
        int n=nums.size();
        if(n<3)return uni_Ans;
        if(*min_element(nums.begin(),nums.end())==*max_element(nums.begin(),nums.end()) && *min_element(nums.begin(),nums.end())==0){
            uni_Ans.push_back({0,0,0});
            return uni_Ans;
        }
        if(!is_sorted(nums.begin(),nums.end()))
        sort(nums.begin(),nums.end());
        for(int i=0;i<n-2;i++){
            int A,B,C;
            A=nums[i];
            int j=i+1,k=n-1;
            while(k>j)
            {
                B=nums[j],C=nums[k];
                if(A+B+C>=0){
                    if(A+B+C==0){
                        ans.insert({A,B,C});
                    }
                    k--;
                }
                else{
                    j++;
                }
            }
        }
        for(auto v:ans)uni_Ans.push_back(v);
        return uni_Ans;
    }
};