class TreeAncestor {
public:
    int N,dp[50005][20];
    TreeAncestor(int n, vector<int>& parent) {
        memset(dp,-1,sizeof(dp));
        N=n;
        for(int i=0;i<n;i++)dp[i][0]=parent[i];
        for(int j=1;j<=log2(N);j++)
        {
            for(int i=0;i<n;i++)
            {
                if(dp[i][j-1]!=-1)
                dp[i][j]=dp[dp[i][j-1]][j-1];
            }
        }
    }   
    int getKthAncestor(int node, int k) {
        for(int i=log2(N);i>=0;i--)
        {
            if(pow(2,i)<=k && dp[node][i]!=-1)
            {
                node=dp[node][i];
                k-=pow(2,i);
            }
        }
        if(k!=0)return -1;
        return node;
    }
};

/**
 * Your TreeAncestor object will be instantiated and called as such:
 * TreeAncestor* obj = new TreeAncestor(n, parent);
 * int param_1 = obj->getKthAncestor(node,k);
 */
