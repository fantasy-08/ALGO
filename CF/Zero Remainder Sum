// Problem : F. Zero Remainder Sum
// Contest : Codeforces - Codeforces Round #677 (Div. 3)
// URL : https://codeforces.com/contest/1433/problem/F
// Memory Limit : 256 MB
// Time Limit : 1000 ms
// Powered by CP Editor (https://github.com/cpeditor/cpeditor)
 
// God & me
// Fly ...
//#pragma GCC optimize "trapv"//  WA to RE int!!
#include <bits/stdc++.h>
#define FOR(i,n) for(int i=0;i<n;i++)
#define FORR(i,n) for(int i=n;i>=0;i--)
#define pb push_back
#define vint vector<int>
#define sint set<int>
#define mint map<int,int>
#define pint pair< int,int >
#define int long long  
#define test int tt1234; cin>>tt1234;while(tt1234--)
#define endl "\n"
#define input(a,n) int n;cin>>n;vint a(n);for(int&v:a)rd(v);
#define all(zz) zz.begin(),zz.end()
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define error(x) cerr << #x <<" is " << x << endl;
#define Error(a,b) cerr<<"( "<<#a<<" , "<<#b<<" ) = ( "<<(a)<<" , "<<(b)<<" )\n";
#define precision(x) cout<<fixed<<setprecision(x);
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
#define present(container, element) (container.find(element)!=container.end())
#define fint fast;test
#define set(a,x) memset(a,x,sizeof(a))
#define L(x)	((x)<<1)
#define R(x)	(((x)<<1)+1)
#define ft first
#define se second
#define MOD 1000000007
using namespace std;
template<typename... T> void rd(T&... args) { ((cin >> args), ...); }
template<typename... T> void pp(T... args) { ((cout << args << " "), ...); cout<<"\n"; }
int dp[71][71][71][71];
int n,m,k;

int go(int i,int j,int rem ,int t,vector<vector<int>>&arr)
{
	if(i==n){
		if(rem==0)return 0;
		return -1e18;
	}
	if(dp[i][j][rem][t]!=-1)return dp[i][j][rem][t];
	
	if(t==0 || j==m)return dp[i][j][rem][t]=
		go(i+1,0,rem,m/2,arr);
	
	return dp[i][j][rem][t]=
		 max(go(i,j+1,(rem%k+arr[i][j]%k)%k,t-1,arr)+arr[i][j],
		 go(i,j+1,rem,t,arr)
	);
	
}	
void solve(){
	rd(n,m,k);
	vector<vector<int>>arr(n,vector<int>(m));
	FOR(i,n){
		FOR(j,m){
			rd(arr[i][j]);
		}
	}
	int ans=go(0,0,0,m/2,arr);
	// ans=max(ans,0ll);
	pp(ans);
	return;	
}
 
 
int32_t main() {
    fast;
	memset(dp,-1,sizeof(dp));
    solve();
    return 0;
}
