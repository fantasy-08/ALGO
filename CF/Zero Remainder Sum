Zero Remainder Sum
// Contest : Codeforces - Codeforces Round #677 (Div. 3)
// URL : https://codeforces.com/contest/1433/problem/F
// Memory Limit : 256 MB
// Time Limit : 1000 ms
// Powered by CP Editor (https://github.com/cpeditor/cpeditor)
 
// God & me
// Fly ...
//#pragma GCC optimize "trapv"//  WA to RE int!!
#include <bits/stdc++.h>
#define FOR(i,n) for(int i=0;i<n;i++)
#define FORR(i,n) for(int i=n;i>=0;i--)
#define pb push_back
#define vint vector<int>
#define sint set<int>
#define mint map<int,int>
#define pint pair< int,int >
#define int long long int 
#define test int tt1234; cin>>tt1234;while(tt1234--)
#define endl "\n"
#define input(a,n) int n;cin>>n;vint a(n);for(int&v:a)rd(v);
#define all(zz) zz.begin(),zz.end()
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define error(x) cerr << #x <<" is " << x << endl;
#define Error(a,b) cerr<<"( "<<#a<<" , "<<#b<<" ) = ( "<<(a)<<" , "<<(b)<<" )\n";
#define precision(x) cout<<fixed<<setprecision(x);
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
#define present(container, element) (container.find(element)!=container.end())
#define fint fast;test
#define set(a,x) memset(a,x,sizeof(a))
#define L(x)	((x)<<1)
#define R(x)	(((x)<<1)+1)
#define ft first
#define se second
#define MOD 1000000007
using namespace std;
template<typename... T> void rd(T&... args) { ((cin >> args), ...); }
template<typename... T> void pp(T... args) { ((cout << args << " "), ...); cout<<"\n"; }
int dp[71][71];
int gdp[71][71][36];
 
/*void Go(int pos,vector<int>& arr,int rem,int k,int sum,map<int,int>& temp)
{
	if(rem==0)
	{
		temp[sum%k]=max(temp[sum%k],sum);
		return ;
	}
	
	if(pos>=arr.size())return ;
	
	temp[sum%k]=max(temp[sum%k],sum);
	
	Go(pos+1,arr,rem-1,k,sum+arr[pos],temp);
	Go(pos+1,arr,rem,k,sum,temp);
}
*/
int Go(int pos,vector<int>&arr,int rem,int take,int k,int T)
{
	if(pos>=arr.size() || take==0){
		if(rem==T)return 0;
		return INT_MIN;
	}
	
	if(gdp[pos][rem][take]!=-1)return gdp[pos][rem][take];
	
	int ans=0;
	// if(rem == T)ans=0;
	
	ans=max({arr[pos]+Go(pos+1,arr,(rem+arr[pos])%k,take-1,k,T),Go(pos+1,arr,rem,take,k,T)});
	
	return gdp[pos][rem][take]=ans;	
}
int go(int pos,vector<map<int,int>>&A,int rem,int n,int k)
{
	if(pos==n){
		if(rem==0)return 0;
		return INT_MIN;
	}
	
	if(dp[pos][rem]!=-1)return dp[pos][rem];
	int ans=INT_MIN;
	
	for(auto v:A[pos])
	{
		int temp=v.second+go(pos+1,A,(rem%k+v.first%k)%k,n,k);
		ans=max(ans,temp);
	}	
	
	return dp[pos][rem]=ans;
}
	
void solve(){
	int n,m,k;
	rd(n,m,k);
	vector<vector<int>>arr(n,vector<int>(m));
	FOR(i,n){
		FOR(j,m){
			rd(arr[i][j]);
		}
	}
	// FOR(i,n){
		// sort(all(arr[i]),greater<int>());
	// }
	
	vector<map<int,int>>A(n,map<int,int>());
	
	FOR(i,n)
	{
		vector<int>B=arr[i];
		rep(j,0,k)
		{
			memset(gdp,-1,sizeof(gdp));
			int val=Go(0,B,0,m/2,k,j);
			A[i][j]=max(val,0ll);
		}
	}
	
	int ans=go(0,A,0,n,k);
	ans=max(ans,0ll);
	pp(ans);
	return;	
}
 
 
int32_t main() {
    fast;
	memset(dp,-1,sizeof(dp));
    solve();
    return 0;
}
