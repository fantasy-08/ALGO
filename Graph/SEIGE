
// Problem : THE SEIGE
// Contest : CodeChef - LogiCode
// URL : https://www.codechef.com/LOGI2020/problems/SEIGE
// Memory Limit : 256 MB
// Time Limit : 1000 ms
// Powered by CP Editor (https://github.com/cpeditor/cpeditor)

//#pragma GCC optimize "trapv"//  WA to RE int!!
#include <bits/stdc++.h>
#define FOR(i,n) for(int i=0;i<n;i++)
#define FORR(i,n) for(int i=n;i>=0;i--)
#define pb push_back
#define vlli vector<int>
#define slli set<int>
#define mlli map<int,int>
#define int long long int 
#define test int tt1234; cin>>tt1234;while(tt1234--)
#define endl "\n"
#define all(zz) zz.begin(),zz.end()
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define error(x) cerr << #x <<" is " << x << endl;
#define Error(a,b) cerr<<"( "<<#a<<" , "<<#b<<" ) = ( "<<(a)<<" , "<<(b)<<" )\n";
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
#define fint fast;test
#define SI(a,n) int a[n];FOR(i,n) cin>>a[i];
#define input(a,n) int n;cin>>n; SI(a,n)
#define set(a,x) memset(a,x,sizeof(a))
#define L(x)	((x)<<1)
#define R(x)	(((x)<<1)+1)
#define ft first
#define se second
#define MOD 1000000007
using namespace std;
const int N=200005;
vector<int>adj[N];
vector<bool>vis(N);
vector<int>C(N);
void solve(){
	int n,m;
	cin>>n>>m;
	rep(i,1,n+1)cin>>C[i],adj[i].clear(),vis[i]=false;
	
	set<pair<int,int>>s;
	
	FOR(t,m){
		int u,v;
		cin>>u>>v;
		
		if(s.find({u,v})!=s.end())continue;
		else if(u==v)continue;
		
		s.insert({u,v}),s.insert({v,u});
		
		adj[u].pb(v);
		adj[v].pb(u);
	}
	
	int X,R;
	cin>>X>>R;
	
	int ans=0;
	queue<int>q;
	
	set<int>Cant;
	FOR(i,X)
	{
		int node;
		cin>>node;
		Cant.insert(node);
		
		q.push(node);
		vis[node]=true;
	}
	
	int choosen=0;
	while(q.size())
	{
		if(choosen >= R) break;
		
		int local_n=q.size();
		vector<int>temp;
		
		for(int i=0;i<local_n;i++)
		{
			int node=q.front();
			q.pop();
			
			if(Cant.find(node)==Cant.end())
				temp.pb(C[node]);
			
			for(auto child:adj[node])
			{
				if(vis[child]==false)
				{
					vis[child]=true;
					q.push(child);
				}
			}
		}
		
		sort(all(temp),greater<int>());
		
		for(auto v:temp)
		{
			if(choosen<R)
			{
				ans+=v;
				choosen++;
			}
			else
			{
				break;
			}
		}	
	}
	
	cout<<ans<<endl;
	return;	
}


int32_t main() {
    // fint{
    	fast;
    	solve();
    // }
    return 0;
}
